{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/sumit/Documents/Projects/Plex/client/src/components/Video/Video.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport io from \"socket.io-client\";\nimport ReactPlayer from \"react-player\";\nconst ENDPOINT = \"localhost:5000\";\nconst socket = io(ENDPOINT);\n\nconst Video = ({\n  playerRef,\n  playerInfo,\n  setPlayerInfo\n}) => {\n  _s();\n\n  const time = useRef(null);\n\n  const getTime = () => {\n    console.log(time.current.getCurrentTime());\n  };\n\n  const HandlePlayPause = playing => {\n    setPlayerInfo(prev => ({ ...prev,\n      playing,\n      time: playerRef.current.getCurrentTime()\n    }));\n  };\n\n  useEffect(() => {\n    if (playerInfo.seeking) playerRef.current.seekTo(playerInfo.time);\n    setPlayerInfo(prev => ({ ...prev,\n      seeking: false\n    }));\n  }, [playerInfo.seeking]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"VideoContainer\",\n    children: /*#__PURE__*/_jsxDEV(ReactPlayer, {\n      url: playerInfo.url,\n      playing: playerInfo.playing,\n      controls: true,\n      ref: playerRef,\n      height: \"100vh\",\n      width: \"80vw\",\n      onPlay: () => {\n        HandlePlayPause(true);\n      },\n      onPause: () => {\n        HandlePlayPause(false);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Video, \"pmTTEkBX98Go7dwlQ+iAN6IAbZY=\");\n\n_c = Video;\nexport default Video;\n\nvar _c;\n\n$RefreshReg$(_c, \"Video\");","map":{"version":3,"sources":["/home/sumit/Documents/Projects/Plex/client/src/components/Video/Video.js"],"names":["React","useState","useEffect","useRef","io","ReactPlayer","ENDPOINT","socket","Video","playerRef","playerInfo","setPlayerInfo","time","getTime","console","log","current","getCurrentTime","HandlePlayPause","playing","prev","seeking","seekTo","url"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AAEA,OAAOC,EAAP,MAAe,kBAAf;AAEA,OAAOC,WAAP,MAAwB,cAAxB;AACA,MAAMC,QAAQ,GAAG,gBAAjB;AAEA,MAAMC,MAAM,GAAGH,EAAE,CAACE,QAAD,CAAjB;;AAEA,MAAME,KAAK,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,UAAb;AAAyBC,EAAAA;AAAzB,CAAD,KAA8C;AAAA;;AAC1D,QAAMC,IAAI,GAAGT,MAAM,CAAC,IAAD,CAAnB;;AAEA,QAAMU,OAAO,GAAG,MAAM;AACpBC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACI,OAAL,CAAaC,cAAb,EAAZ;AACD,GAFD;;AAIA,QAAMC,eAAe,GAAIC,OAAD,IAAa;AACnCR,IAAAA,aAAa,CAAES,IAAD,KAAW,EACvB,GAAGA,IADoB;AAEvBD,MAAAA,OAFuB;AAGvBP,MAAAA,IAAI,EAAEH,SAAS,CAACO,OAAV,CAAkBC,cAAlB;AAHiB,KAAX,CAAD,CAAb;AAKD,GAND;;AAQAf,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIQ,UAAU,CAACW,OAAf,EAAwBZ,SAAS,CAACO,OAAV,CAAkBM,MAAlB,CAAyBZ,UAAU,CAACE,IAApC;AACxBD,IAAAA,aAAa,CAAES,IAAD,KAAW,EACvB,GAAGA,IADoB;AAEvBC,MAAAA,OAAO,EAAE;AAFc,KAAX,CAAD,CAAb;AAID,GANQ,EAMN,CAACX,UAAU,CAACW,OAAZ,CANM,CAAT;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,2BACE,QAAC,WAAD;AACE,MAAA,GAAG,EAAEX,UAAU,CAACa,GADlB;AAEE,MAAA,OAAO,EAAEb,UAAU,CAACS,OAFtB;AAGE,MAAA,QAAQ,EAAE,IAHZ;AAIE,MAAA,GAAG,EAAEV,SAJP;AAKE,MAAA,MAAM,EAAC,OALT;AAME,MAAA,KAAK,EAAC,MANR;AAOE,MAAA,MAAM,EAAE,MAAM;AACZS,QAAAA,eAAe,CAAC,IAAD,CAAf;AACD,OATH;AAUE,MAAA,OAAO,EAAE,MAAM;AACbA,QAAAA,eAAe,CAAC,KAAD,CAAf;AACD;AAZH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CAzCD;;GAAMV,K;;KAAAA,K;AA2CN,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\n\nimport io from \"socket.io-client\";\n\nimport ReactPlayer from \"react-player\";\nconst ENDPOINT = \"localhost:5000\";\n\nconst socket = io(ENDPOINT);\n\nconst Video = ({ playerRef, playerInfo, setPlayerInfo }) => {\n  const time = useRef(null);\n\n  const getTime = () => {\n    console.log(time.current.getCurrentTime());\n  };\n\n  const HandlePlayPause = (playing) => {\n    setPlayerInfo((prev) => ({\n      ...prev,\n      playing,\n      time: playerRef.current.getCurrentTime(),\n    }));\n  };\n\n  useEffect(() => {\n    if (playerInfo.seeking) playerRef.current.seekTo(playerInfo.time);\n    setPlayerInfo((prev) => ({\n      ...prev,\n      seeking: false,\n    }));\n  }, [playerInfo.seeking]);\n\n  return (\n    <div className=\"VideoContainer\">\n      <ReactPlayer\n        url={playerInfo.url}\n        playing={playerInfo.playing}\n        controls={true}\n        ref={playerRef}\n        height=\"100vh\"\n        width=\"80vw\"\n        onPlay={() => {\n          HandlePlayPause(true);\n        }}\n        onPause={() => {\n          HandlePlayPause(false);\n        }}\n      />\n    </div>\n  );\n};\n\nexport default Video;\n"]},"metadata":{},"sourceType":"module"}