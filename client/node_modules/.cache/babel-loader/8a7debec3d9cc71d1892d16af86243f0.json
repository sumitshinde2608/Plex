{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/sumit/Documents/Projects/Plex/client/src/components/Chat/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport queryString from \"query-string\";\nimport io from \"socket.io-client\";\nimport TextContainer from \"../TextContainer/TextContainer\";\nimport Messages from \"../Messages/Messages\";\nimport InfoBar from \"../InfoBar/InfoBar\";\nimport Input from \"../Input/Input\";\nimport Video from \"../Video/Video\";\nimport \"./Chat.css\";\nconst ENDPOINT = \"localhost:5000\";\nlet socket;\n\nconst Chat = ({\n  location\n}) => {\n  _s();\n\n  const {\n    name,\n    room,\n    URL\n  } = queryString.parse(location.search);\n  const [users, setUsers] = useState(\"\");\n  const [firstTime, setFirstTime] = useState(true);\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const playerRef = useRef(0);\n  const [playerData, SetPlayerData] = useState({\n    url: URL,\n    playing: false,\n    time: 0,\n    seeking: false\n  });\n  useEffect(() => {\n    socket = io(ENDPOINT);\n    socket.emit(\"join\", {\n      name,\n      room,\n      URL\n    }, error => {\n      if (error) {\n        alert(error);\n      }\n    });\n  }, [ENDPOINT, location.search]);\n  useEffect(() => {\n    socket.on(\"message\", message => {\n      setMessages(messages => [...messages, message]);\n    });\n    socket.on(\"roomData\", ({\n      users\n    }) => {\n      setUsers(users);\n    });\n  }, []);\n\n  const sendMessage = event => {\n    event.preventDefault();\n\n    if (message) {\n      socket.emit(\"sendMessage\", message, () => setMessage(\"\"));\n    }\n  };\n\n  useEffect(() => {\n    socket.on(\"requestPlayerInfo\", () => {\n      // console.log(\"Ftr\");\n      socket.emit(\"sendPlayerState\", {\n        url: playerRef.current.props.url,\n        time: playerRef.current.getCurrentTime(),\n        playing: playerRef.current.props.playing\n      }, response => {\n        console.log(response);\n      });\n      console.log(playerRef.current.getCurrentTime());\n    });\n  }, []);\n  let trys = \"\";\n  useEffect(() => {\n    socket.on(\"getPlayerInfo\", playerInfo => {\n      console.log(playerInfo);\n      SetPlayerData({ ...playerInfo,\n        seeking: true\n      });\n    });\n  }, []);\n  useEffect(() => {\n    socket.on(\"getPlayPause\", playerInfo => {\n      SetPlayerData({ ...playerInfo,\n        seeking: true\n      });\n    });\n  });\n  useEffect(() => {\n    console.log(playerData);\n\n    if (firstTime) {\n      setFirstTime(false);\n      return;\n    }\n\n    if (playerData.seeking) return;\n    socket.emit(\"sendPlayerState\", playerData, response => {});\n  }, [playerData.playing]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"outerContainer\",\n    children: [/*#__PURE__*/_jsxDEV(Video, {\n      playerRef: playerRef,\n      playerInfo: playerData,\n      setPlayerInfo: SetPlayerData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(InfoBar, {\n        room: room\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Messages, {\n        messages: messages,\n        name: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        message: message,\n        setMessage: setMessage,\n        sendMessage: sendMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chat, \"SRweYqt8GPrp45ZrvpY2MzxZ7gQ=\");\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/home/sumit/Documents/Projects/Plex/client/src/components/Chat/Chat.js"],"names":["React","useState","useEffect","useRef","queryString","io","TextContainer","Messages","InfoBar","Input","Video","ENDPOINT","socket","Chat","location","name","room","URL","parse","search","users","setUsers","firstTime","setFirstTime","message","setMessage","messages","setMessages","playerRef","playerData","SetPlayerData","url","playing","time","seeking","emit","error","alert","on","sendMessage","event","preventDefault","current","props","getCurrentTime","response","console","log","trys","playerInfo"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport queryString from \"query-string\";\nimport io from \"socket.io-client\";\n\nimport TextContainer from \"../TextContainer/TextContainer\";\nimport Messages from \"../Messages/Messages\";\nimport InfoBar from \"../InfoBar/InfoBar\";\nimport Input from \"../Input/Input\";\nimport Video from \"../Video/Video\";\n\nimport \"./Chat.css\";\n\nconst ENDPOINT = \"localhost:5000\";\n\nlet socket;\n\nconst Chat = ({ location }) => {\n  const { name, room, URL } = queryString.parse(location.search);\n\n  const [users, setUsers] = useState(\"\");\n  const [firstTime, setFirstTime] = useState(true);\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n\n  const playerRef = useRef(0);\n  const [playerData, SetPlayerData] = useState({\n    url: URL,\n    playing: false,\n    time: 0,\n    seeking: false,\n  });\n\n  useEffect(() => {\n    socket = io(ENDPOINT);\n\n    socket.emit(\"join\", { name, room, URL }, (error) => {\n      if (error) {\n        alert(error);\n      }\n    });\n  }, [ENDPOINT, location.search]);\n\n  useEffect(() => {\n    socket.on(\"message\", (message) => {\n      setMessages((messages) => [...messages, message]);\n    });\n\n    socket.on(\"roomData\", ({ users }) => {\n      setUsers(users);\n    });\n  }, []);\n\n  const sendMessage = (event) => {\n    event.preventDefault();\n\n    if (message) {\n      socket.emit(\"sendMessage\", message, () => setMessage(\"\"));\n    }\n  };\n\n  useEffect(() => {\n    socket.on(\"requestPlayerInfo\", () => {\n      // console.log(\"Ftr\");\n      socket.emit(\n        \"sendPlayerState\",\n        {\n          url: playerRef.current.props.url,\n          time: playerRef.current.getCurrentTime(),\n          playing: playerRef.current.props.playing,\n        },\n        (response) => {\n          console.log(response);\n        }\n      );\n      console.log(playerRef.current.getCurrentTime());\n    });\n  }, []);\n\n  let trys = \"\";\n  useEffect(() => {\n    socket.on(\"getPlayerInfo\", (playerInfo) => {\n      console.log(playerInfo);\n\n      SetPlayerData({ ...playerInfo, seeking: true });\n    });\n  }, []);\n\n  useEffect(() => {\n    socket.on(\"getPlayPause\", (playerInfo) => {\n      SetPlayerData({ ...playerInfo, seeking: true });\n    });\n  });\n\n  useEffect(() => {\n    console.log(playerData);\n    if (firstTime) {\n      setFirstTime(false);\n      return;\n    }\n    if (playerData.seeking) return;\n    socket.emit(\"sendPlayerState\", playerData, (response) => {});\n  }, [playerData.playing]);\n\n  return (\n    <div className=\"outerContainer\">\n      <Video\n        playerRef={playerRef}\n        playerInfo={playerData}\n        setPlayerInfo={SetPlayerData}\n      />\n      <div className=\"container\">\n        <InfoBar room={room} />\n        <Messages messages={messages} name={name} />\n        <Input\n          message={message}\n          setMessage={setMessage}\n          sendMessage={sendMessage}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}