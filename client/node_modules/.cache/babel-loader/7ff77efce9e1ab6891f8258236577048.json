{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/sumit/Documents/Projects/Plex/client/src/components/Chat/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport queryString from 'query-string';\nimport io from \"socket.io-client\";\nimport TextContainer from '../TextContainer/TextContainer';\nimport Messages from '../Messages/Messages';\nimport InfoBar from '../InfoBar/InfoBar';\nimport Input from '../Input/Input';\nimport Video from '../Video/Video';\nimport './Chat.css';\nconst ENDPOINT = 'localhost:5000';\nlet socket; // const time = useRef(0);\n\nconst Chat = ({\n  location\n}) => {\n  _s();\n\n  const {\n    name,\n    room,\n    URL\n  } = queryString.parse(location.search); // const [name, setName] = useState('');\n  // const [room, setRoom] = useState('');\n\n  const [users, setUsers] = useState('');\n  const [firstTime, setFirstTime] = useState(true);\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const playerRef = useRef(0);\n  const [playerData, SetPlayerData] = useState({\n    url: URL,\n    playing: false,\n    time: 0,\n    seeking: false\n  });\n  useEffect(() => {\n    socket = io(ENDPOINT); // setRoom(room);\n    // setName(name);\n    // setURL(URL);\n\n    socket.emit('join', {\n      name,\n      room,\n      URL\n    }, error => {\n      if (error) {\n        alert(error);\n      }\n    });\n  }, [ENDPOINT, location.search]);\n  useEffect(() => {\n    socket.on('message', message => {\n      setMessages(messages => [...messages, message]);\n    });\n    socket.on(\"roomData\", ({\n      users\n    }) => {\n      setUsers(users);\n    });\n  }, []);\n\n  const sendMessage = event => {\n    event.preventDefault();\n\n    if (message) {\n      socket.emit('sendMessage', message, () => setMessage(''));\n    }\n  };\n\n  useEffect(() => {\n    socket.on(\"requestPlayerInfo\", () => {\n      // console.log(\"Ftr\");\n      socket.emit('sendPlayerState', {\n        url: playerRef.current.props.url,\n        time: playerRef.current.getCurrentTime(),\n        playing: playerRef.current.props.playing\n      }, response => {\n        console.log(response);\n      });\n      console.log(playerRef.current.getCurrentTime());\n    });\n  }, []);\n  let trys = '';\n  useEffect(() => {\n    socket.on('getPlayerInfo', playerInfo => {\n      console.log(playerInfo);\n      SetPlayerData({ ...playerInfo,\n        seeking: true\n      });\n    });\n  }, []);\n  useEffect(() => {\n    socket.on('getPlayPause', playerInfo => {\n      SetPlayerData({ ...playerInfo,\n        seeking: true\n      });\n    });\n  });\n  useEffect(() => {\n    console.log(playerData);\n\n    if (firstTime) {\n      setFirstTime(false);\n      return;\n    }\n\n    if (playerData.seeking) return;\n    socket.emit('sendPlayerState', playerData, response => {});\n  }, [playerData.playing]); // const Videosync =( ) => {\n  //   seek.current.seekTo(PlayerState,'seconds');\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"outerContainer\",\n    children: [/*#__PURE__*/_jsxDEV(Video, {\n      playerRef: playerRef,\n      playerInfo: playerData,\n      setPlayerInfo: SetPlayerData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(InfoBar, {\n        room: room\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Messages, {\n        messages: messages,\n        name: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        message: message,\n        setMessage: setMessage,\n        sendMessage: sendMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chat, \"SJ2olqY44n9DY9AZ81d//VJMaAI=\");\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/home/sumit/Documents/Projects/Plex/client/src/components/Chat/Chat.js"],"names":["React","useState","useEffect","useRef","queryString","io","TextContainer","Messages","InfoBar","Input","Video","ENDPOINT","socket","Chat","location","name","room","URL","parse","search","users","setUsers","firstTime","setFirstTime","message","setMessage","messages","setMessages","playerRef","playerData","SetPlayerData","url","playing","time","seeking","emit","error","alert","on","sendMessage","event","preventDefault","current","props","getCurrentTime","response","console","log","trys","playerInfo"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport queryString from 'query-string';\nimport io from \"socket.io-client\";\n\nimport TextContainer from '../TextContainer/TextContainer';\nimport Messages from '../Messages/Messages';\nimport InfoBar from '../InfoBar/InfoBar';\nimport Input from '../Input/Input';\nimport Video from '../Video/Video';\n\nimport './Chat.css';\n\nconst ENDPOINT = 'localhost:5000';\n\nlet socket;\n\n// const time = useRef(0);\n\nconst Chat = ({ location }) => {\n\n  const { name, room ,URL} = queryString.parse(location.search);\n\n  // const [name, setName] = useState('');\n  // const [room, setRoom] = useState('');\n  const [users, setUsers] = useState('');\n  const [firstTime, setFirstTime] = useState(true);\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  \n  const playerRef = useRef(0);\n  const [playerData, SetPlayerData] = useState({url:URL,playing:false,time:0, seeking: false});\n\n  useEffect(() => {\n\n    socket = io(ENDPOINT);\n\n    // setRoom(room);\n    // setName(name);\n    // setURL(URL);\n\n    socket.emit('join', { name, room, URL }, (error) => {\n      if(error) {\n        alert(error);\n      }\n    });\n  }, [ENDPOINT, location.search]);\n  \n\n  useEffect(() => {\n    socket.on('message', message => {\n      setMessages(messages => [ ...messages, message ]);\n    });\n    \n    socket.on(\"roomData\", ({ users }) => {\n      setUsers(users);\n    });\n}, []);\n\n  const sendMessage = (event) => {\n    event.preventDefault();\n\n    if(message) {\n      socket.emit('sendMessage', message, () => setMessage(''));\n    }\n  }\n\nuseEffect(()=>{\n  socket.on(\"requestPlayerInfo\",()=> {\n    // console.log(\"Ftr\");\n    socket.emit('sendPlayerState',{url:playerRef.current.props.url,\n      time:playerRef.current.getCurrentTime(),\n      playing:playerRef.current.props.playing},\n      (response)=>{\n        console.log(response)\n    })\n    console.log(playerRef.current.getCurrentTime(),)\n  })\n},[]);\n\nlet trys = '';\nuseEffect(()=>{\n  socket.on('getPlayerInfo',(playerInfo)=>{\n    console.log(playerInfo)\n  \n    SetPlayerData({...playerInfo, seeking: true});\n    })\n},[])\n\nuseEffect(()=>{\n  socket.on('getPlayPause', (playerInfo)=>{\n    SetPlayerData({...playerInfo, seeking: true})\n  })\n})\n\nuseEffect(()=>{\n  console.log(playerData);\n  if(firstTime){\n  setFirstTime(false)\n    return;\n  }\n  if(playerData.seeking) return;\n  socket.emit('sendPlayerState', playerData, response=>{})\n},[playerData.playing])\n\n\n  // const Videosync =( ) => {\n  //   seek.current.seekTo(PlayerState,'seconds');\n  // }\n\n  return (\n    <div className=\"outerContainer\">\n      <Video playerRef={playerRef} playerInfo={playerData} setPlayerInfo = {SetPlayerData}/>\n      <div className=\"container\">\n          <InfoBar room={room} />\n          <Messages messages={messages} name={name} />\n          <Input message={message} setMessage={setMessage} sendMessage={sendMessage} />\n      </div>\n      {/* <TextContainer users={users}/> */}\n      {/* <button onClick= {()=> console.log(playerData)}>Click Chat.js</button> */}\n \n      \n    </div>\n  );\n}\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}